{"version":3,"file":"component---src-pages-basics-tsx-e5858db00f2162fb15a1.js","mappings":"mIAkEA,IA9DA,SAAaA,GAOX,MAAMC,GAAOC,EAAAA,EAAAA,gBAAeC,GACtBC,EACJJ,EAAMK,aAAeJ,EAAKK,KAAKC,aAAaF,YAC9C,OACEG,EAAAA,cAACC,EAAAA,EAAM,CACLC,eAAgB,CACdC,KAAMX,EAAMW,MAEdC,MAAOZ,EAAMY,MACbC,cAAe,QAAQZ,EAAKK,KAAKC,aAAaK,QAC9CE,KAAM,CACJ,CACEC,KAAM,cACNC,QAASZ,GAEX,CACEa,SAAU,WACVD,QAAShB,EAAMY,OAEjB,CACEK,SAAU,iBACVD,QAASZ,GAEX,CACEa,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASf,EAAKK,KAAKC,aAAaW,QAElC,CACEH,KAAM,gBACNC,QAAShB,EAAMY,OAEjB,CACEG,KAAM,sBACNC,QAASZ,IAEXe,OACAnB,EAAMoB,SAASC,OAAS,EACpB,CACEN,KAAM,WACNC,QAAShB,EAAMoB,SAASE,KAAK,OAE/B,KAIZ,EAIA,MAAMnB,EAAY,Y,oGCnBlB,MA9BcoB,IAEVf,EAAAA,cAACgB,EAAAA,YAAW,CACVC,MAAK,aAYLC,OAASzB,GACPO,EAAAA,cAAA,aACEA,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,UAAI,cAGRA,EAAAA,cAAA,aAxCV,SAAsBP,GACpB,MAAM0B,EAAY,GAYlB,OAXA1B,EAAK2B,cAAcC,MAAMC,SAASC,IAChCA,EAAKC,KAAKC,OAAOH,SAASI,IACxBP,EAAUQ,KACR3B,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAKuB,EAAKC,KAAKI,YACf5B,EAAAA,cAAA,UAAK0B,EAAM,IACX1B,EAAAA,cAAA,UAAK0B,EAAM,KAEd,GACD,IAEGP,CACT,CA0BkBU,CAAapC,O,UC5B/B,MATmBqC,IACjB9B,EAAAA,cAAC+B,EAAAA,EAAM,KACL/B,EAAAA,cAACgC,EAAAA,EAAG,CAAC5B,MAAM,aAAaQ,SAAU,CAAC,SAAU,cAAe,WAC5DZ,EAAAA,cAAA,UAAI,oBACJA,EAAAA,cAAA,SAAG,sCACHA,EAAAA,cAACe,EAAK,M","sources":["webpack://xwds/./src/components/seo.tsx","webpack://xwds/./src/components/table.tsx","webpack://xwds/./src/pages/basics.tsx"],"sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nfunction SEO(props: {\n  description: string;\n  lang: string;\n  meta: Array<string>;\n  keywords: Array<string>;\n  title: string;\n}) {\n  const data = useStaticQuery(detailsQuery);\n  const metaDescription =\n    props.description || data.site.siteMetadata.description;\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: props.lang,\n      }}\n      title={props.title}\n      titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: props.title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: data.site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: props.title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(\n        props.keywords.length > 0\n          ? {\n              name: `keywords`,\n              content: props.keywords.join(`, `),\n            }\n          : []\n      )}\n    />\n  );\n}\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction getTableRows(data) {\n  const tableRows = [];\n  data.allBasicsJson.edges.forEach((word) => {\n    word.node.values.forEach((value) => {\n      tableRows.push(\n        <tr>\n          <td>{word.node.definition}</td>\n          <td>{value[0]}</td>\n          <td>{value[1]}</td>\n        </tr>\n      );\n    });\n  });\n  return tableRows;\n}\n\nconst Table = (): JSX.Element => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query BasicsQuery {\n          allBasicsJson {\n            edges {\n              node {\n                definition\n                values\n              }\n            }\n          }\n        }\n      `}\n      render={(data) => (\n        <table>\n          <thead>\n            <tr>\n              <th>Definition</th>\n              <th>Value</th>\n              <th>Comments</th>\n            </tr>\n          </thead>\n          <tbody>{getTableRows(data)}</tbody>\n        </table>\n      )}\n    />\n  );\n};\nexport default Table;\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Table from \"../components/table\";\nimport SEO from \"../components/seo\";\n\nconst BasicsPage = (): JSX.Element => (\n  <Layout>\n    <SEO title=\"Crosswords\" keywords={[`gatsby`, `application`, `react`]} />\n    <h1>Crossword basics</h1>\n    <p>Some things that help get started.</p>\n    <Table></Table>\n  </Layout>\n);\n\nexport default BasicsPage;\n"],"names":["props","data","useStaticQuery","detailsQuery","metaDescription","description","site","siteMetadata","React","Helmet","htmlAttributes","lang","title","titleTemplate","meta","name","content","property","author","concat","keywords","length","join","Table","StaticQuery","query","render","tableRows","allBasicsJson","edges","forEach","word","node","values","value","push","definition","getTableRows","BasicsPage","Layout","SEO"],"sourceRoot":""}