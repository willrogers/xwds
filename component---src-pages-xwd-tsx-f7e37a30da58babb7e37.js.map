{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.values.js","webpack:///./src/components/xwd_utils.js","webpack:///./src/components/xwd.js","webpack:///./src/pages/xwd.tsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js"],"names":["$export","$entries","S","entries","it","$values","values","AC","DN","DIRNAME","ac","dn","Coord","x","y","this","equals","other","nextCell","direction","forwards","increment","ClueSeq","length","ClueDetails","num","clue","letters","releaseDate","cellInArray","array","cell","k","cellInClue","i","FilledCell","props","style","position","width","h","height","v","top","left","className","EmptyCell","useState","contents","setContents","backgroundColor","selected","highlight","ref","input","focus","onClick","type","onKeyUp","event","console","log","key","match","selectNextCell","selectNextClue","moveCell","value","number","CurrentClue","text","padding","fontWeight","margin","Crossword","selectedClueSeq","setSelectedClueSeq","selectedClue","setSelectedClue","selectedCell","setSelectedCell","blackCells","cells","whiteCells","j","blackCell","bCell","push","getWhiteCells","clues","acSquares","dnSquares","whiteSquares","acrossClues","downClues","clueNumber","acrossCount","downCount","l","figureOutClues","Object","clueSeq","date","clueDets","crosswordOnClick","dir","clickedClue","title","preamble","id","Grid","ClueBox","clueCells","doHighlight","justClicked","cellIsBlack","matched","acHighlighted","dnHighlighted","dirClues","otherDirection","otherDirClues","newClue","coord","highlightedCells","map","e","display","verticalAlign","border","entry","vals","words","len","Clue","clueBoxOnClick","classNames","CrosswordPage","xwdData","allXwd2019Json","edges","node","acrossSize","across_size","downSize","down_size","blackSquares","black_squares","rawClues","forEach","element","keywords","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","result","call"],"mappings":"iqFACA,IAAIA,EAAU,EAAQ,QAClBC,EAAW,EAAQ,OAAR,EAA8B,GAE7CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BC,QAAS,SAAiBC,GACxB,OAAOH,EAASG,O,qBCLpB,IAAIJ,EAAU,EAAQ,QAClBK,EAAU,EAAQ,OAAR,EAA8B,GAE5CL,EAAQA,EAAQE,EAAG,SAAU,CAC3BI,OAAQ,SAAgBF,GACtB,OAAOC,EAAQD,O,sGCNNG,G,wHAAK,MACLC,EAAK,KAKLC,EAAU,CAAEC,GAAI,SAAUC,GAAI,QAE9BC,EAAb,WACE,WAAYC,EAAGC,GACbC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAHb,2BAKEE,OAAA,SAAOC,GACL,OAAiB,OAAVA,GAAkBF,KAAKF,IAAMI,EAAMJ,GAAKE,KAAKD,IAAMG,EAAMH,GANpE,EAQEI,SAAA,SAASC,EAAWC,QAAiB,IAAjBA,OAAW,GAC7B,IAAMC,EAAYD,EAAW,GAAK,EAClC,OAAID,IAAcZ,EACT,IAAIK,EAAMG,KAAKF,EAAIQ,EAAWN,KAAKD,GAEnC,IAAIF,EAAMG,KAAKF,EAAGE,KAAKD,EAAIO,IAbxC,KAkBaC,EAAb,WACE,WAAYT,EAAGC,EAAGS,EAAQJ,GACxBJ,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKQ,OAASA,EACdR,KAAKI,UAAYA,EALrB,mBAOEH,OAAA,SAAOC,GACL,OACY,OAAVA,GACAF,KAAKF,IAAMI,EAAMJ,GACjBE,KAAKD,IAAMG,EAAMH,GACjBC,KAAKQ,SAAWN,EAAMM,QACtBR,KAAKI,YAAcF,EAAME,WAb/B,KAkBaK,EAAb,WACE,WAAYC,EAAKN,EAAWO,EAAMC,EAASC,GACzCb,KAAKU,IAAMA,EACXV,KAAKI,UAAYA,EACjBJ,KAAKW,KAAOA,EACZX,KAAKY,QAAUA,EACfZ,KAAKa,YAAcA,EANvB,mBAQEZ,OAAA,SAAOC,GACL,OACY,OAAVA,GACAF,KAAKU,MAAQR,EAAMQ,KACnBV,KAAKI,YAAcF,EAAME,WAZ/B,KAiBO,SAASU,EAAYC,EAAOC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAMP,OAAQS,IAAK,CAAC,IAAD,EACpBF,EAAME,GAAfnB,EAD6B,EAC7BA,EAAGC,EAD0B,EAC1BA,EACX,GAAID,IAAMkB,EAAKlB,GAAKC,IAAMiB,EAAKjB,EAC7B,OAAO,EAGX,OAAO,EAGF,SAASmB,EAAWP,EAAMK,GAC/B,GAAIL,EAAKP,YAAcZ,EACrB,IAAK,IAAI2B,EAAIR,EAAKb,EAAGqB,EAAIR,EAAKb,EAAIa,EAAKH,OAAQW,IAC7C,GAAIH,EAAKlB,IAAMqB,GAAKH,EAAKjB,IAAMY,EAAKZ,EAClC,OAAO,EAIb,GAAIY,EAAKP,YAAcX,EACrB,IAAS0B,EAAIR,EAAKZ,EAAGoB,EAAIR,EAAKZ,EAAIY,EAAKH,OAAQW,IAC7C,GAAIH,EAAKlB,GAAKa,EAAKb,GAAKkB,EAAKjB,GAAKoB,EAChC,OAAO,EAIb,OAAO,E,k0BCtEF,SAASC,EAAWC,GACzB,OACE,yBACEC,MAAO,CACLC,SAAU,WACVC,MAAOH,EAAMI,EAAI,EAAI,KACrBC,OAAQL,EAAMM,EAAI,EAAI,KACtBC,IAAKP,EAAMtB,EAAI,KACf8B,KAAMR,EAAMvB,EAAI,MAElBgC,UAAU,eAIT,SAASC,EAAUV,GAAQ,IAAD,EACCW,mBAAS,IAAlCC,EADwB,KACdC,EADc,KAwB3BC,EAAkBd,EAAMe,SACxB,OACAf,EAAMgB,UACN,YACA,YAEJ,OACE,oCACE,2BACEf,MAAO,CACLC,SAAU,WACVC,MAAOH,EAAMI,EAAI,EAAI,KACrBC,OAAQL,EAAMM,EAAI,EAAI,KACtBC,IAAKP,EAAMtB,EAAI,KACf8B,KAAMR,EAAMvB,EAAI,KAChBqC,gBAAiBA,GAEnBG,IAAK,SAACC,GAAD,OAAWA,GAASlB,EAAMe,UAAYG,EAAMC,SACjDC,QAASpB,EAAMoB,QACfX,UAAU,aACVY,KAAK,OACLC,QA3Cc,SAACC,GACnBC,QAAQC,IAAI,WAAaF,EAAMG,KAC3BH,EAAMG,IAAIC,MAAM,aAClBd,EAAYU,EAAMG,KAClB1B,EAAM4B,kBACiB,cAAdL,EAAMG,KACfb,EAAY,IACZb,EAAM4B,gBAAe,IACE,WAAdL,EAAMG,IACfb,EAAY,IACW,QAAdU,EAAMG,IACf1B,EAAM6B,iBACiB,YAAdN,EAAMG,IACf1B,EAAM8B,SD3CM,MC4CW,cAAdP,EAAMG,IACf1B,EAAM8B,SD5CQ,QC6CS,cAAdP,EAAMG,IACf1B,EAAM8B,SD7CQ,QC8CS,eAAdP,EAAMG,KACf1B,EAAM8B,SD9CS,UCuEbC,MAAOnB,IAET,yBACEH,UAAU,cACVR,MAAO,CACLC,SAAU,WACVC,MAAOH,EAAMI,EAAI,EAAI,KACrBC,OAAQL,EAAMM,EAAI,EAAI,KACtBC,IAAKP,EAAMtB,EAAI,KACf8B,KAAMR,EAAMvB,EAAI,EAAI,OAGrBuB,EAAMgC,SAMR,SAASC,EAAYjC,GAC1B,IAAIkC,EAAO,oBACX,GAAmB,OAAflC,EAAMV,KAAe,CAAC,IAAD,EACmBU,EAAMV,KAChD4C,EAFuB,EACf7C,IACJ,IAFmB,EACVN,UACT,KAFmB,EACCO,KACpB,KAFmB,EACOC,QAC1B,IAEN,OACE,yBAAKU,MAAO,CAAEkC,QAAS,SACrB,0BACElC,MAAO,CACLmC,WAAY,OACZD,QAAS,MACTE,OAAQ,MACRvB,gBAAiB,cAGlBoB,IAMF,SAASI,EAAUtC,GAAO,MAEeW,mBAAS,MAAhD4B,EAFwB,KAEPC,EAFO,OAIS7B,mBAAS,MAA1C8B,EAJwB,KAIVC,EAJU,OAMS/B,mBAAS,MAA1CgC,EANwB,KAMVC,EANU,KAO/BpB,QAAQC,IAAI,8BACZD,QAAQC,IAAIgB,GACZjB,QAAQC,IAAIc,GATmB,MD3B1B,SAAuBnC,EAAGE,EAAGuC,GAIlC,IAHA,IAAMC,EAAQ,GACRC,EAAa,GAEVjD,EAAI,EAAGA,EAAIM,EAAGN,IACrB,IAAK,IAAIkD,EAAI,EAAGA,EAAI1C,EAAG0C,IAAK,CAE1B,IADA,IAAIC,GAAY,EACPrD,EAAI,EAAGA,EAAIiD,EAAW1D,OAAQS,IAAK,CAC1C,IAAMsD,EAAQL,EAAWjD,GACrBsD,EAAMzE,IAAMqB,GAAKoD,EAAMxE,IAAMsE,IAC/BC,GAAY,GAGXA,GACHF,EAAWI,KAAK,IAAI3E,EAAMsB,EAAGkD,IAE/BF,EAAMK,KAAK,CAACrD,EAAGkD,EAAGC,IAGtB,MAAO,CAACF,EAAYD,GCkBQM,CAAcpD,EAAMM,EAAGN,EAAMI,EAAGJ,EAAM6C,YAA3DE,EAVwB,KAUZD,EAVY,KAYzBO,EDjBD,SAAwBC,EAAWC,EAAWC,GAMnD,IAJA,IAAIC,EAAc,GACdC,EAAY,GACZC,EAAa,EAERX,EAAI,EAAGA,EAAIO,EAAWP,IAC7B,IAAK,IAAIlD,EAAI,EAAGA,EAAIwD,EAAWxD,IAAK,CAClC,IACI8D,EAAc,EACdC,EAAY,EAChB,GAAIpE,EAAY+D,EAHL,IAAIhF,EAAMsB,EAAGkD,IAGa,CAEnC,GAAU,IAANlD,IAAYL,EAAY+D,EAAc,IAAIhF,EAAMsB,EAAI,EAAGkD,IAAK,CAC9DY,EAAc,EACd,IAAK,IAAIhE,EAAIE,EAAI,EAAGF,EAAI0D,GAClB7D,EAAY+D,EAAc,IAAIhF,EAAMoB,EAAGoD,IADVpD,IAE/BgE,GAAe,EAKfA,EAAc,IAChBH,EAAYE,GAAc,IAAIzE,EAAQY,EAAGkD,EAAGY,EAAazF,IAI7D,GAAU,IAAN6E,IAAYvD,EAAY+D,EAAc,IAAIhF,EAAMsB,EAAGkD,EAAI,IAAK,CAC9Da,EAAY,EACZ,IAAK,IAAIC,EAAId,EAAI,EAAGc,EAAIP,GAClB9D,EAAY+D,EAAc,IAAIhF,EAAMsB,EAAGgE,IADVA,IAE/BD,GAAa,EAKbA,EAAY,IACdH,EAAUC,GAAc,IAAIzE,EAAQY,EAAGkD,EAAGa,EAAWzF,KAGrDwF,EAAc,GAAKC,EAAY,KACjCF,GAAc,IAKtB,MAAO,CACLrF,GAAImF,EACJlF,GAAImF,GC/BQK,CAAe/D,EAAMI,EAAGJ,EAAMM,EAAGyC,GAC/C,GAAuB,MAAnBR,EACF,cAA6ByB,OAAOjG,QAClCsF,EAAMd,EAAgBxD,YADxB,eAEG,CAAC,IAAD,OAFSM,EAET,KAFc4E,EAEd,OAC6BjE,EAAMqD,MAAMY,EAAQlF,WAAWM,GAAtDC,EADN,KACYC,EADZ,KACqB2E,EADrB,KAEKC,EAAW,IAAI/E,EACnBC,EACA4E,EAAQlF,UACRO,EACAC,EACA2E,GAEED,EAAQrF,OAAO2D,KAAqB4B,EAASvF,OAAO6D,IACtDC,EAAgByB,GAItB,SAASC,EAAiB/E,EAAKgF,GAC7B7C,QAAQC,IAAR,uBAAmC4C,EAAnC,IAA0ChF,GAC1C,IAAMiF,EAAcjB,EAAMgB,GAAKhF,GAC/BmD,EAAmB8B,GACnB1B,EAAgB,IAAIpE,EAAM8F,EAAY7F,EAAG6F,EAAY5F,IAEvD,OACE,oCACE,4BAAKsB,EAAMuE,OACX,2BAAIvE,EAAMwE,UACV,kBAACvC,EAAD,CAAa3C,KAAMmD,IACnB,yBAAKxC,MAAO,CAAEoC,OAAQ,OAASoC,GAAG,iBAChC,kBAACC,EAAD,CACE7B,WAAY7C,EAAM6C,WAClBE,WAAYA,EACZD,MAAOA,EACP1C,EAAGJ,EAAMI,EACTE,EAAGN,EAAMI,EACTiD,MAAOA,EACPZ,aAAcF,EACdG,gBAAiBF,EACjBG,aAAcA,EACdC,gBAAiBA,KAGrB,kBAAC+B,EAAD,CACE5F,UAAWZ,EACXkF,MAAOrD,EAAMqD,MAAN,GACPjC,QAASgD,EACT3B,aAAcA,IAEhB,kBAACkC,EAAD,CACE5F,UAAWX,EACXiF,MAAOrD,EAAMqD,MAAN,GACPjC,QAASgD,EACT3B,aAAcA,KAMf,SAASiC,EAAK1E,GAenB,IADA,IAAM4E,EAAY,GAClB,MAAyBZ,OAAOjG,QAAQiC,EAAMqD,MAAN,IAAxC,eAA0D,CAAC,IAAD,OAAhD3B,EAAgD,KAA3CK,EAA2C,KACxD6C,EAAUlD,GAAO,IAAIlD,EAAMuD,EAAMtD,EAAGsD,EAAMrD,GAE5C,cAAyBsF,OAAOjG,QAAQiC,EAAMqD,MAAN,IAAxC,eAA0D,CAAC,IAAD,OAAhD3B,EAAgD,KAA3CK,EAA2C,KACxD6C,EAAUlD,GAAO,IAAIlD,EAAMuD,EAAMtD,EAAGsD,EAAMrD,GAE5C,SAASmG,EAAYC,GAGnB,GAFAtD,QAAQC,IAAI,gBACZD,QAAQC,IAAIqD,KAEVA,EAAYrG,EAAI,GAChBqG,EAAYrG,GAAKuB,EAAMI,GACvB0E,EAAYpG,EAAI,GAChBoG,EAAYpG,GAAKsB,EAAMM,GAxB3B,SAAqBX,GACnB,IAAK,IAAIG,EAAI,EAAGA,EAAIE,EAAM6C,WAAW1D,OAAQW,IAAK,CAChD,IAAMmD,EAAYjD,EAAM6C,WAAW/C,GACnC,GAAIH,EAAKlB,IAAMwE,EAAUxE,GAAKkB,EAAKjB,IAAMuE,EAAUvE,EACjD,OAAO,EAGX,OAAO,EAqBHqG,CAAYD,IAAhB,CAGA9E,EAAM4C,gBAAgBkC,GAEtB,IADA,IACA,EADIE,GAAU,EACd,IAAmBhF,EAAM+C,cAAzB,aAAqC,CAAC,IAA3BpD,EAA0B,QAC/BmF,EAAYlG,OAAOe,KACrBqF,GAAU,GAGd,GAAKA,EAAL,CAMA,IAHA,IACIC,EAAgB,KAChBC,EAAgB,KACpB,MAAkBlB,OAAO9F,OAAO8B,EAAMqD,MAAN,IAAhC,eAAkD,CAA7C,IAAItB,EAAK,KACZ,GAAIlC,EAAWkC,EAAO+C,GAAc,CAGlC,GAFAG,EAAgBlD,EAEZ/B,EAAMyC,eAAiBzC,EAAMyC,aAAa7D,OAAOqG,GAInD,OAHAzD,QAAQC,IAAI,6BACZD,QAAQC,IAAIwD,QACZjF,EAAM0C,gBAAgBuC,GAGtB,OAIN,cAAkBjB,OAAO9F,OAAO8B,EAAMqD,MAAN,IAAhC,eAAkD,CAA7C,IAAItB,EAAK,KACZ,GAAIlC,EAAWkC,EAAO+C,GAKpB,OAJAI,EAAgBnD,EAChBP,QAAQC,IAAI,6BACZD,QAAQC,IAAIyD,QACZlF,EAAM0C,gBAAgBwC,MAM5B,SAAStD,EAAe5C,QAAiB,IAAjBA,OAAW,GAAM,MACtBgB,EAAM2C,aAAflE,EAD+B,EAC/BA,EAAGC,EAD4B,EAC5BA,EACPsB,EAAMyC,aAAa1D,YAAcZ,IAEjCa,GACAP,IAAMuB,EAAMyC,aAAahE,EAAIuB,EAAMyC,aAAatD,OAAS,EAEzDa,EAAM4C,gBAAgB,IAAIpE,EAAMC,EAAI,EAAGC,IAC7BM,GAAYP,IAAMuB,EAAMyC,aAAahE,GAC/CuB,EAAM4C,gBAAgB,IAAIpE,EAAMC,EAAI,EAAGC,KAGvCsB,EAAMyC,aAAa1D,YAAcX,IAEjCY,GACAN,IAAMsB,EAAMyC,aAAa/D,EAAIsB,EAAMyC,aAAatD,OAAS,EAEzDa,EAAM4C,gBAAgB,IAAIpE,EAAMC,EAAGC,EAAI,IAC7BM,GAAYN,IAAMsB,EAAMyC,aAAa/D,GAC/CsB,EAAM4C,gBAAgB,IAAIpE,EAAMC,EAAGC,EAAI,KAK7C,SAASoD,EAAS/C,GD1RF,OC2RVA,EACF8F,EAAY7E,EAAM2C,aAAa7D,SAASV,GAAI,ID3R9B,SC4RLW,EACT8F,EAAY7E,EAAM2C,aAAa7D,SAASV,GAAI,ID5R9B,SC6RLW,EACT8F,EAAY7E,EAAM2C,aAAa7D,SAASX,GAAI,ID7R7B,UC8RNY,GACT8F,EAAY7E,EAAM2C,aAAa7D,SAASX,GAAI,IAIhD,SAAS0D,IACPL,QAAQC,IAAI,oBACZD,QAAQC,IAAIzB,EAAMyC,aAAa1D,WAC/B,IAAMoG,EAAWnB,OAAO9F,OAAO8B,EAAMqD,MAAMrD,EAAMyC,aAAa1D,YACxDqG,EAAiBpF,EAAMyC,aAAa1D,YAAcZ,EAAKC,EAAKD,EAC5DkH,EAAgBrB,OAAO9F,OAAO8B,EAAMqD,MAAM+B,IAChD5D,QAAQC,IAAI2D,GAEZ,IAAK,IAAItF,EAAI,EAAGA,EAAIqF,EAAShG,OAAQW,IAKnC,GAJA0B,QAAQC,IAAI,OACZD,QAAQC,IAAIzB,EAAMyC,cAClBjB,QAAQC,IAAI,QACZD,QAAQC,IAAI0D,EAASrF,IACjBE,EAAMyC,aAAa7D,OAAOuG,EAASrF,IAAK,CAC1C,IAAIwF,OAAO,EACPxF,IAAMqF,EAAShG,OAAS,GAC1BqC,QAAQC,IAAI,aACZ6D,EAAUH,EAASrF,EAAI,KAEvB0B,QAAQC,IAAI,aACZ6D,EAAUD,EAAc,IAE1BrF,EAAM0C,gBAAgB4C,GACtB,IAAMC,EAAQ,IAAI/G,EAAM8G,EAAQ7G,EAAG6G,EAAQ5G,GAC3CsB,EAAM4C,gBAAgB2C,GACtB,OAKN,IAAIC,EAAmB,GACvB,GAA0B,MAAtBxF,EAAMyC,aAAsB,CAAC,IAAD,EACMzC,EAAMyC,aAAlChE,EADsB,EACtBA,EAAGC,EADmB,EACnBA,EAAGS,EADgB,EAChBA,OAAQJ,EADQ,EACRA,UAKtB,GAJAyC,QAAQC,IAAIhD,GACZ+C,QAAQC,IAAI/C,GACZ8C,QAAQC,IAAItC,GACZqC,QAAQC,IAAI1C,GACRA,GAAaZ,EACf,IAAK,IAAI2B,EAAIrB,EAAGqB,EAAIrB,EAAIU,EAAQW,IAC9B0F,EAAiBrC,KAAK,IAAI3E,EAAMsB,EAAGpB,SAGrC,IAAK,IAAIoB,EAAIpB,EAAGoB,EAAIpB,EAAIS,EAAQW,IAC9B0F,EAAiBrC,KAAK,IAAI3E,EAAMC,EAAGqB,IAKzC0B,QAAQC,IAAImD,GACZpD,QAAQC,IAAI,cACZD,QAAQC,IAAI+D,GACZ,IAAK,IAAI5F,EAAI,EAAGA,EAAII,EAAM8C,MAAM3D,OAAQS,IAAK,CAG3C,IAH4C,IAAD,EAC5BI,EAAM8C,MAAMlD,GAApBnB,EADoC,KACjCC,EADiC,KAEvCsD,EAAS,KACb,MAAyBgC,OAAOjG,QAAQ6G,GAAxC,eAAoD,CAAC,IAAD,OAA1ClD,EAA0C,KAArCK,EAAqC,KAC9CA,EAAMtD,IAAMA,GAAKsD,EAAMrD,IAAMA,IAC/BsD,EAASN,GAGb1B,EAAM8C,MAAMlD,GAAGuD,KAAKnB,GAEpB,IADA,IAAIhB,GAAY,EACP8C,EAAI,EAAGA,EAAI0B,EAAiBrG,OAAQ2E,IACvCrF,IAAM+G,EAAiB1B,GAAGrF,GAAKC,IAAM8G,EAAiB1B,GAAGpF,IAC3DsC,GAAY,GAGhBhB,EAAM8C,MAAMlD,GAAGuD,KAAKnC,GAGtB,OADAQ,QAAQC,IAAIzB,EAAM8C,OAEhB,yBACE7C,MAAO,CACLC,SAAU,WACVC,MApLY,GAoLLH,EAAMI,EAAgB,KAC7BC,OAtLa,GAsLLL,EAAMM,EAAiB,OAGhCN,EAAM8C,MAAM2C,KAAI,YAA2C,IAAzC3F,EAAwC,KAArCkD,EAAqC,KAAlCC,EAAkC,KAAvBjB,EAAuB,KAAfhB,EAAe,KACzD,OAAIiC,EAEA,kBAAClD,EAAD,CACEK,EA5LM,GA6LNE,EA9LO,GA+LP7B,EA9LM,GA8LHqB,EACHpB,EAhMO,GAgMJsE,EACHtB,IAAK5B,EAAIE,EAAMI,EAAI4C,IAKrB,kBAACtC,EAAD,CACEN,EAtMM,GAuMNE,EAxMO,GAyMP7B,EAxMM,GAwMHqB,EACHpB,EA1MO,GA0MJsE,EACHtB,IAAK5B,EAAIE,EAAMI,EAAI4C,EACnBhB,OAAQA,EACRhB,UAAWA,EACXD,SACyB,OAAvBf,EAAM2C,cACN7C,IAAME,EAAM2C,aAAalE,GACzBuE,IAAMhD,EAAM2C,aAAajE,EAE3B0C,QAAS,SAACsE,GAAD,OAAOb,EAAY,IAAIrG,EAAMsB,EAAGkD,KACzCpB,eAAgBA,EAChBC,eAAgBA,EAChBC,SAAUA,QASjB,SAAS6C,EAAQ3E,GAItB,IAAIX,EAAM,KACNN,EAAY,KAKhB,OAJ2B,OAAvBiB,EAAMyC,eACRpD,EAAMW,EAAMyC,aAAapD,IACzBN,EAAYiB,EAAMyC,aAAa1D,WAG/B,yBACEkB,MAAO,CACLmC,WAAY,OACZjC,MAAO,QACPwF,QAAS,eACTC,cAAe,MACfvD,OAAQ,QAGV,yBAAKpC,MAAO,CAAE4F,OAAQ,kBAAmB1D,QAAS,QAC/C9D,EAAQ2B,EAAMjB,YAEhBiF,OAAOjG,QAAQiC,EAAMqD,OAAOoC,KAAI,SAACK,GAAW,IACpC9D,EAAgB8D,EADmB,GAC3BC,EAAQD,EADmB,GAEpC/E,EAAWf,EAAMjB,YAAcA,GAAaiD,IAAW3C,EACtD2G,EAAcD,EAHqB,GAG5BE,EAAOF,EAHqB,GAO1C,OACE,kBAACG,EAAD,CACElE,OAAQA,EACR1C,KAAM0G,EACNC,IAAKA,EACL7E,QARJ,YA1BN,SAAwBY,GACtBhC,EAAMoB,QAAQY,EAAQhC,EAAMjB,WA0BtBoH,CAAenE,IAQbjB,SAAUA,QAQf,SAASmF,EAAKlG,GACnB,IAAIoG,EAAa,OAIjB,OAHIpG,EAAMe,WACRqF,GAAU,aAGV,yBAAK3F,UAAW2F,EAAYhF,QAASpB,EAAMoB,SACxCpB,EAAMgC,OADT,KACmBhC,EAAMV,KADzB,KACiCU,EAAMiG,IADvC,KCxYWI,UA7DO,WACpB,IA6BMC,EA7BO,OA6BQC,eAAeC,MAAM,GAAGC,KACvClC,EAAQ+B,EAAQ/B,MAChBC,EAAW8B,EAAQ9B,SACnBkC,EAAaJ,EAAQK,YACrBC,EAAWN,EAAQO,UACnBC,EAAeR,EAAQS,cACvBC,EAAWV,EAAQjD,MACnBA,EAAQ,CAAE/E,GAAI,GAAIC,GAAI,IAC5ByI,EAAS1I,GAAG2I,SAAQ,SAACC,GACnB7D,EAAM/E,GAAG4I,EAAQlF,QAAU,CAACkF,EAAQ5H,KAAM4H,EAAQ/H,OAAQ+H,EAAQhD,SAEpE8C,EAASzI,GAAG0I,SAAQ,SAACC,GACnB7D,EAAM9E,GAAG2I,EAAQlF,QAAU,CAACkF,EAAQ5H,KAAM4H,EAAQ/H,OAAQ+H,EAAQhD,SAGpE,IAAMrB,EAAaiE,EAAarB,KAAI,gBAAEhH,EAAF,KAAKC,EAAL,YAAY,IAAIF,EAAMC,EAAGC,MAC7D,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK6F,MAAM,aAAa4C,SAAU,CAAC,SAAD,yBAClC,kBAAC7E,EAAD,CACEiC,MAAOA,EACPC,SAAUA,EACV3B,WAAYA,EACZzC,EAAGsG,EACHpG,EAAGsG,EACHvD,MAAOA,O,qBC/Df,IAAI+D,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAU3J,GAOf,IANA,IAKI0D,EALAkG,EAAIN,EAAUtJ,GACd6J,EAAOR,EAAQO,GACfzI,EAAS0I,EAAK1I,OACdW,EAAI,EACJgI,EAAS,GAEN3I,EAASW,GACd4B,EAAMmG,EAAK/H,KACNsH,IAAeG,EAAOQ,KAAKH,EAAGlG,IACjCoG,EAAO3E,KAAKwE,EAAY,CAACjG,EAAKkG,EAAElG,IAAQkG,EAAElG,IAG9C,OAAOoG","file":"component---src-pages-xwd-tsx-f7e37a30da58babb7e37.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","export const AC = \"ac\";\nexport const DN = \"dn\";\nexport const UP = \"up\";\nexport const DOWN = \"down\";\nexport const LEFT = \"left\";\nexport const RIGHT = \"right\";\nexport const DIRNAME = { ac: \"Across\", dn: \"Down\" };\n\nexport class Coord {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  equals(other) {\n    return other !== null && this.x === other.x && this.y === other.y;\n  }\n  nextCell(direction, forwards = true) {\n    const increment = forwards ? 1 : -1;\n    if (direction === AC) {\n      return new Coord(this.x + increment, this.y);\n    } else {\n      return new Coord(this.x, this.y + increment);\n    }\n  }\n}\n\nexport class ClueSeq {\n  constructor(x, y, length, direction) {\n    this.x = x;\n    this.y = y;\n    this.length = length;\n    this.direction = direction;\n  }\n  equals(other) {\n    return (\n      other !== null &&\n      this.x === other.x &&\n      this.y === other.y &&\n      this.length === other.length &&\n      this.direction === other.direction\n    );\n  }\n}\n\nexport class ClueDetails {\n  constructor(num, direction, clue, letters, releaseDate) {\n    this.num = num;\n    this.direction = direction;\n    this.clue = clue;\n    this.letters = letters;\n    this.releaseDate = releaseDate;\n  }\n  equals(other) {\n    return (\n      other !== null &&\n      this.num === other.num &&\n      this.direction === other.direction\n    );\n  }\n}\n\nexport function cellInArray(array, cell) {\n  for (var k = 0; k < array.length; k++) {\n    const { x, y } = array[k];\n    if (x === cell.x && y === cell.y) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function cellInClue(clue, cell) {\n  if (clue.direction === AC) {\n    for (var i = clue.x; i < clue.x + clue.length; i++) {\n      if (cell.x === i && cell.y === clue.y) {\n        return true;\n      }\n    }\n  }\n  if (clue.direction === DN) {\n    for (var i = clue.y; i < clue.y + clue.length; i++) {\n      if (cell.x == clue.x && cell.y == i) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function getWhiteCells(h, v, blackCells) {\n  const cells = [];\n  const whiteCells = [];\n  /* Make array of white cells. */\n  for (let i = 0; i < h; i++) {\n    for (let j = 0; j < v; j++) {\n      let blackCell = false;\n      for (var k = 0; k < blackCells.length; k++) {\n        const bCell = blackCells[k];\n        if (bCell.x === i && bCell.y === j) {\n          blackCell = true;\n        }\n      }\n      if (!blackCell) {\n        whiteCells.push(new Coord(i, j));\n      }\n      cells.push([i, j, blackCell]);\n    }\n  }\n  return [whiteCells, cells];\n}\n\nexport function figureOutClues(acSquares, dnSquares, whiteSquares) {\n  /* Collect clues and write in numbers */\n  var acrossClues = [];\n  var downClues = [];\n  var clueNumber = 1;\n  /* loop from right to left then top to bottom */\n  for (var j = 0; j < dnSquares; j++) {\n    for (var i = 0; i < acSquares; i++) {\n      var cell = new Coord(i, j);\n      var acrossCount = 0;\n      var downCount = 0;\n      if (cellInArray(whiteSquares, cell)) {\n        /* Start of across clue */\n        if (i === 0 || !cellInArray(whiteSquares, new Coord(i - 1, j))) {\n          acrossCount = 1;\n          for (var k = i + 1; k < acSquares; k++) {\n            if (cellInArray(whiteSquares, new Coord(k, j))) {\n              acrossCount += 1;\n            } else {\n              break;\n            }\n          }\n          if (acrossCount > 1) {\n            acrossClues[clueNumber] = new ClueSeq(i, j, acrossCount, AC);\n          }\n        }\n        /* Start of down clue */\n        if (j === 0 || !cellInArray(whiteSquares, new Coord(i, j - 1))) {\n          downCount = 1;\n          for (var l = j + 1; l < dnSquares; l++) {\n            if (cellInArray(whiteSquares, new Coord(i, l))) {\n              downCount += 1;\n            } else {\n              break;\n            }\n          }\n          if (downCount > 1) {\n            downClues[clueNumber] = new ClueSeq(i, j, downCount, DN);\n          }\n        }\n        if (acrossCount > 1 || downCount > 1) {\n          clueNumber += 1;\n        }\n      }\n    }\n  }\n  return {\n    ac: acrossClues,\n    dn: downClues\n  };\n}\n","import React, { useState } from \"react\";\nimport {\n  AC,\n  DN,\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n  DIRNAME,\n  Coord,\n  cellInClue,\n  figureOutClues,\n  getWhiteCells,\n  ClueDetails,\n} from \"./xwd_utils\";\n\nexport function FilledCell(props) {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        width: props.h + 1 + \"px\",\n        height: props.v + 1 + \"px\",\n        top: props.y + \"px\",\n        left: props.x + \"px\",\n      }}\n      className=\"black-cell\"\n    ></div>\n  );\n}\nexport function EmptyCell(props) {\n  const [contents, setContents] = useState(\"\");\n  const handleKeyUp = (event) => {\n    console.log(\"pressed \" + event.key);\n    if (event.key.match(/^[a-z]$/i)) {\n      setContents(event.key);\n      props.selectNextCell();\n    } else if (event.key === \"Backspace\") {\n      setContents(\"\");\n      props.selectNextCell(false);\n    } else if (event.key === \"Delete\") {\n      setContents(\"\");\n    } else if (event.key === \"Tab\") {\n      props.selectNextClue();\n    } else if (event.key === \"ArrowUp\") {\n      props.moveCell(UP);\n    } else if (event.key === \"ArrowDown\") {\n      props.moveCell(DOWN);\n    } else if (event.key === \"ArrowLeft\") {\n      props.moveCell(LEFT);\n    } else if (event.key === \"ArrowRight\") {\n      props.moveCell(RIGHT);\n    }\n  };\n  let backgroundColor = props.selected\n    ? \"cyan\"\n    : props.highlight\n    ? \"lightblue\"\n    : \"lightgray\";\n\n  return (\n    <>\n      <input\n        style={{\n          position: \"absolute\",\n          width: props.h - 1 + \"px\",\n          height: props.v - 1 + \"px\",\n          top: props.y + \"px\",\n          left: props.x + \"px\",\n          backgroundColor: backgroundColor,\n        }}\n        ref={(input) => input && props.selected && input.focus()}\n        onClick={props.onClick}\n        className=\"white-cell\"\n        type=\"text\"\n        onKeyUp={handleKeyUp}\n        value={contents}\n      ></input>\n      <div\n        className=\"clue-number\"\n        style={{\n          position: \"absolute\",\n          width: props.h - 1 + \"px\",\n          height: props.v - 1 + \"px\",\n          top: props.y + \"px\",\n          left: props.x + 2 + \"px\",\n        }}\n      >\n        {props.number}\n      </div>\n    </>\n  );\n}\n\nexport function CurrentClue(props) {\n  let text = \"No clue selected.\";\n  if (props.clue !== null) {\n    const { num, direction, clue, letters } = props.clue;\n    text = `${num} ${direction}. ${clue} (${letters})`;\n  }\n  return (\n    <div style={{ padding: \"15px\" }}>\n      <span\n        style={{\n          fontWeight: \"bold\",\n          padding: \"5px\",\n          margin: \"5px\",\n          backgroundColor: \"lightblue\",\n        }}\n      >\n        {text}\n      </span>\n    </div>\n  );\n}\n\nexport function Crossword(props) {\n  // a ClueSeq\n  const [selectedClueSeq, setSelectedClueSeq] = useState(null);\n  // a ClueDetails\n  const [selectedClue, setSelectedClue] = useState(null);\n  // a Coord\n  const [selectedCell, setSelectedCell] = useState(null);\n  console.log(\"selected clue then clueSeq\");\n  console.log(selectedClue);\n  console.log(selectedClueSeq);\n  const [whiteCells, cells] = getWhiteCells(props.v, props.h, props.blackCells);\n  // different to props.clues\n  const clues = figureOutClues(props.h, props.v, whiteCells);\n  if (selectedClueSeq != null) {\n    for (const [num, clueSeq] of Object.entries(\n      clues[selectedClueSeq.direction]\n    )) {\n      const [clue, letters, date] = props.clues[clueSeq.direction][num];\n      const clueDets = new ClueDetails(\n        num,\n        clueSeq.direction,\n        clue,\n        letters,\n        date\n      );\n      if (clueSeq.equals(selectedClueSeq) && !clueDets.equals(selectedClue)) {\n        setSelectedClue(clueDets);\n      }\n    }\n  }\n  function crosswordOnClick(num, dir) {\n    console.log(`crossword onClick() ${dir} ${num}`);\n    const clickedClue = clues[dir][num];\n    setSelectedClueSeq(clickedClue);\n    setSelectedCell(new Coord(clickedClue.x, clickedClue.y));\n  }\n  return (\n    <>\n      <h1>{props.title}</h1>\n      <p>{props.preamble}</p>\n      <CurrentClue clue={selectedClue}></CurrentClue>\n      <div style={{ margin: \"5px\" }} id=\"xwd-container\">\n        <Grid\n          blackCells={props.blackCells}\n          whiteCells={whiteCells}\n          cells={cells}\n          h={props.h}\n          v={props.h}\n          clues={clues}\n          selectedClue={selectedClueSeq}\n          setSelectedClue={setSelectedClueSeq}\n          selectedCell={selectedCell}\n          setSelectedCell={setSelectedCell}\n        ></Grid>\n      </div>\n      <ClueBox\n        direction={AC}\n        clues={props.clues[AC]}\n        onClick={crosswordOnClick}\n        selectedClue={selectedClue}\n      />\n      <ClueBox\n        direction={DN}\n        clues={props.clues[DN]}\n        onClick={crosswordOnClick}\n        selectedClue={selectedClue}\n      />\n    </>\n  );\n}\n\nexport function Grid(props) {\n  const cellHeight = 30;\n  const cellWidth = 30;\n\n  function cellIsBlack(cell) {\n    for (let i = 0; i < props.blackCells.length; i++) {\n      const blackCell = props.blackCells[i];\n      if (cell.x === blackCell.x && cell.y === blackCell.y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const clueCells = {};\n  for (let [key, value] of Object.entries(props.clues[AC])) {\n    clueCells[key] = new Coord(value.x, value.y);\n  }\n  for (let [key, value] of Object.entries(props.clues[DN])) {\n    clueCells[key] = new Coord(value.x, value.y);\n  }\n  function doHighlight(justClicked) {\n    console.log(\"just clicked\");\n    console.log(justClicked);\n    if (\n      justClicked.x < 0 ||\n      justClicked.x >= props.h ||\n      justClicked.y < 0 ||\n      justClicked.y >= props.v\n    ) {\n      return;\n    }\n    if (cellIsBlack(justClicked)) {\n      return;\n    }\n    props.setSelectedCell(justClicked);\n    let matched = false;\n    for (const cell of props.whiteCells) {\n      if (justClicked.equals(cell)) {\n        matched = true;\n      }\n    }\n    if (!matched) {\n      return;\n    }\n    const highlighted = [];\n    let acHighlighted = null;\n    let dnHighlighted = null;\n    for (let value of Object.values(props.clues[AC])) {\n      if (cellInClue(value, justClicked)) {\n        acHighlighted = value;\n        // If this clue is the highlighted one already carry on.\n        if (props.selectedClue && !props.selectedClue.equals(acHighlighted)) {\n          console.log(\"setiting selected clue to\");\n          console.log(acHighlighted);\n          props.setSelectedClue(acHighlighted);\n          return;\n        } else {\n          break;\n        }\n      }\n    }\n    for (let value of Object.values(props.clues[DN])) {\n      if (cellInClue(value, justClicked)) {\n        dnHighlighted = value;\n        console.log(\"setiting selected clue to\");\n        console.log(dnHighlighted);\n        props.setSelectedClue(dnHighlighted);\n        return;\n      }\n    }\n  }\n\n  function selectNextCell(forwards = true) {\n    const { x, y } = props.selectedCell;\n    if (props.selectedClue.direction === AC) {\n      if (\n        forwards &&\n        x !== props.selectedClue.x + props.selectedClue.length - 1\n      ) {\n        props.setSelectedCell(new Coord(x + 1, y));\n      } else if (!forwards && x !== props.selectedClue.x) {\n        props.setSelectedCell(new Coord(x - 1, y));\n      }\n    }\n    if (props.selectedClue.direction === DN) {\n      if (\n        forwards &&\n        y !== props.selectedClue.y + props.selectedClue.length - 1\n      ) {\n        props.setSelectedCell(new Coord(x, y + 1));\n      } else if (!forwards && y !== props.selectedClue.y) {\n        props.setSelectedCell(new Coord(x, y - 1));\n      }\n    }\n  }\n\n  function moveCell(direction) {\n    if (direction === UP) {\n      doHighlight(props.selectedCell.nextCell(DN, false));\n    } else if (direction === DOWN) {\n      doHighlight(props.selectedCell.nextCell(DN, true));\n    } else if (direction === LEFT) {\n      doHighlight(props.selectedCell.nextCell(AC, false));\n    } else if (direction === RIGHT) {\n      doHighlight(props.selectedCell.nextCell(AC, true));\n    }\n  }\n\n  function selectNextClue() {\n    console.log(\"select next clue\");\n    console.log(props.selectedClue.direction);\n    const dirClues = Object.values(props.clues[props.selectedClue.direction]);\n    const otherDirection = props.selectedClue.direction === AC ? DN : AC;\n    const otherDirClues = Object.values(props.clues[otherDirection]);\n    console.log(otherDirection);\n\n    for (let i = 0; i < dirClues.length; i++) {\n      console.log(\"sel\");\n      console.log(props.selectedClue);\n      console.log(\"iter\");\n      console.log(dirClues[i]);\n      if (props.selectedClue.equals(dirClues[i])) {\n        let newClue;\n        if (i !== dirClues.length - 1) {\n          console.log(\"setting 1\");\n          newClue = dirClues[i + 1];\n        } else {\n          console.log(\"setting 2\");\n          newClue = otherDirClues[0];\n        }\n        props.setSelectedClue(newClue);\n        const coord = new Coord(newClue.x, newClue.y);\n        props.setSelectedCell(coord);\n        break;\n      }\n    }\n  }\n\n  let highlightedCells = [];\n  if (props.selectedClue != null) {\n    const { x, y, length, direction } = props.selectedClue;\n    console.log(x);\n    console.log(y);\n    console.log(length);\n    console.log(direction);\n    if (direction == AC) {\n      for (let i = x; i < x + length; i++) {\n        highlightedCells.push(new Coord(i, y));\n      }\n    } else {\n      for (let i = y; i < y + length; i++) {\n        highlightedCells.push(new Coord(x, i));\n      }\n    }\n  }\n\n  console.log(clueCells);\n  console.log(\"highlights\");\n  console.log(highlightedCells);\n  for (let k = 0; k < props.cells.length; k++) {\n    const [x, y] = props.cells[k];\n    let number = null;\n    for (let [key, value] of Object.entries(clueCells)) {\n      if (value.x === x && value.y === y) {\n        number = key;\n      }\n    }\n    props.cells[k].push(number);\n    let highlight = false;\n    for (let l = 0; l < highlightedCells.length; l++) {\n      if (x === highlightedCells[l].x && y === highlightedCells[l].y) {\n        highlight = true;\n      }\n    }\n    props.cells[k].push(highlight);\n  }\n  console.log(props.cells);\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: props.h * cellWidth + \"px\",\n        height: props.v * cellHeight + \"px\",\n      }}\n    >\n      {props.cells.map(([i, j, blackCell, number, highlight]) => {\n        if (blackCell) {\n          return (\n            <FilledCell\n              h={cellWidth}\n              v={cellHeight}\n              x={i * cellWidth}\n              y={j * cellHeight}\n              key={i + props.h * j}\n            />\n          );\n        } else {\n          return (\n            <EmptyCell\n              h={cellWidth}\n              v={cellHeight}\n              x={i * cellWidth}\n              y={j * cellHeight}\n              key={i + props.h * j}\n              number={number}\n              highlight={highlight}\n              selected={\n                props.selectedCell !== null &&\n                i === props.selectedCell.x &&\n                j === props.selectedCell.y\n              }\n              onClick={(e) => doHighlight(new Coord(i, j))}\n              selectNextCell={selectNextCell}\n              selectNextClue={selectNextClue}\n              moveCell={moveCell}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nexport function ClueBox(props) {\n  function clueBoxOnClick(number) {\n    props.onClick(number, props.direction);\n  }\n  let num = null;\n  let direction = null;\n  if (props.selectedClue !== null) {\n    num = props.selectedClue.num;\n    direction = props.selectedClue.direction;\n  }\n  return (\n    <div\n      style={{\n        fontWeight: \"bold\",\n        width: \"300px\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n        margin: \"5px\",\n      }}\n    >\n      <div style={{ border: \"1px solid black\", padding: \"5px\" }}>\n        {DIRNAME[props.direction]}\n      </div>\n      {Object.entries(props.clues).map((entry) => {\n        const [number, vals] = entry;\n        const selected = props.direction === direction && number === num;\n        const [words, len] = vals;\n        function onClick() {\n          clueBoxOnClick(number);\n        }\n        return (\n          <Clue\n            number={number}\n            clue={words}\n            len={len}\n            onClick={onClick}\n            selected={selected}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport function Clue(props) {\n  let classNames = \"clue\";\n  if (props.selected) {\n    classNames = `${classNames} selected`;\n  }\n  return (\n    <div className={classNames} onClick={props.onClick}>\n      {props.number}. {props.clue} ({props.len})\n    </div>\n  );\n}\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { Crossword } from \"../components/xwd\";\nimport { Coord } from \"../components/xwd_utils\";\n\nconst CrosswordPage = (): JSX.Element => {\n  const data = useStaticQuery(graphql`\n    query XwdQuery {\n      allXwd2019Json {\n        edges {\n          node {\n            title\n            preamble\n            across_size\n            down_size\n            black_squares\n            clues {\n              ac {\n                number\n                clue\n                length\n                date\n              }\n              dn {\n                number\n                clue\n                length\n                date\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const xwdData = data.allXwd2019Json.edges[0].node;\n  const title = xwdData.title;\n  const preamble = xwdData.preamble;\n  const acrossSize = xwdData.across_size;\n  const downSize = xwdData.down_size;\n  const blackSquares = xwdData.black_squares;\n  const rawClues = xwdData.clues;\n  const clues = { ac: {}, dn: {} };\n  rawClues.ac.forEach((element) => {\n    clues.ac[element.number] = [element.clue, element.length, element.date];\n  });\n  rawClues.dn.forEach((element) => {\n    clues.dn[element.number] = [element.clue, element.length, element.date];\n  });\n\n  const blackCells = blackSquares.map(([x, y]) => new Coord(x, y));\n  return (\n    <Layout>\n      <SEO title=\"Crosswords\" keywords={[`gatsby`, `application`, `react`]} />\n      <Crossword\n        title={title}\n        preamble={preamble}\n        blackCells={blackCells}\n        h={acrossSize}\n        v={downSize}\n        clues={clues}\n      />\n    </Layout>\n  );\n};\n\nexport default CrosswordPage;\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}