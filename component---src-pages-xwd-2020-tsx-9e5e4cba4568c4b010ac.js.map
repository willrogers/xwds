{"version":3,"file":"component---src-pages-xwd-2020-tsx-9e5e4cba4568c4b010ac.js","mappings":"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","sources":["webpack://xwds/./src/pages/xwd2020.tsx","webpack://xwds/./src/components/xwd.js","webpack://xwds/./src/components/xwd_utils.js"],"sourcesContent":["import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { Crossword } from \"../components/xwd\";\nimport { Coord } from \"../components/xwd_utils\";\n\nconst CrosswordPage = (): JSX.Element => {\n  const data = useStaticQuery(graphql`\n    query {\n      allXwd2020Json {\n        edges {\n          node {\n            title\n            preamble\n            across_size\n            down_size\n            black_squares\n            clues {\n              ac {\n                number\n                clue\n                length\n                date\n              }\n              dn {\n                number\n                clue\n                length\n                date\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const xwdData = data.allXwd2020Json.edges[0].node;\n  const title = xwdData.title;\n  const preamble = xwdData.preamble;\n  const acrossSize = xwdData.across_size;\n  const downSize = xwdData.down_size;\n  const blackSquares = xwdData.black_squares;\n  const rawClues = xwdData.clues;\n  const clues = { ac: {}, dn: {} };\n  rawClues.ac.forEach((element) => {\n    clues.ac[element.number] = [element.clue, element.length, element.date];\n  });\n  rawClues.dn.forEach((element) => {\n    clues.dn[element.number] = [element.clue, element.length, element.date];\n  });\n\n  const blackCells = blackSquares.map(([x, y]) => new Coord(x, y));\n  return (\n    <Layout>\n      <SEO title=\"Crosswords\" keywords={[`gatsby`, `application`, `react`]} />\n      <Crossword\n        title={title}\n        preamble={preamble}\n        blackCells={blackCells}\n        h={acrossSize}\n        v={downSize}\n        clues={clues}\n      />\n    </Layout>\n  );\n};\n\nexport default CrosswordPage;\n","import React, { useState } from \"react\";\nimport {\n  AC,\n  DN,\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n  DIRNAME,\n  Coord,\n  cellInClue,\n  figureOutClues,\n  getWhiteCells,\n  ClueDetails,\n} from \"./xwd_utils\";\n\nexport function FilledCell(props) {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        width: props.h + 1 + \"px\",\n        height: props.v + 1 + \"px\",\n        top: props.y + \"px\",\n        left: props.x + \"px\",\n      }}\n      className=\"black-cell\"\n    ></div>\n  );\n}\nexport function EmptyCell(props) {\n  const handleKeyUp = (event) => {\n    console.log(\"pressed \" + event.key);\n    if (event.key.match(/^[a-z]$/i)) {\n      props.setContents(event.key);\n      props.selectNextCell();\n    } else if (event.key === \"Backspace\") {\n      props.setContents(\"\");\n      props.selectNextCell(false);\n    } else if (event.key === \"Delete\") {\n      props.setContents(\"\");\n    } else if (event.key === \"Tab\") {\n      props.selectNextClue();\n    } else if (event.key === \"ArrowUp\") {\n      props.moveCell(UP);\n    } else if (event.key === \"ArrowDown\") {\n      props.moveCell(DOWN);\n    } else if (event.key === \"ArrowLeft\") {\n      props.moveCell(LEFT);\n    } else if (event.key === \"ArrowRight\") {\n      props.moveCell(RIGHT);\n    }\n  };\n  let backgroundColor = props.selected\n    ? \"cyan\"\n    : props.highlight\n      ? \"lightblue\"\n      : \"lightgray\";\n\n  return (\n    <>\n      <input\n        style={{\n          position: \"absolute\",\n          width: props.h - 1 + \"px\",\n          height: props.v - 1 + \"px\",\n          top: props.y + \"px\",\n          left: props.x + \"px\",\n          backgroundColor: backgroundColor,\n        }}\n        ref={(input) => input && props.selected && input.focus()}\n        onClick={props.onClick}\n        className=\"white-cell\"\n        type=\"text\"\n        onKeyUp={handleKeyUp}\n        value={props.contents}\n      ></input>\n      <div\n        className=\"clue-number\"\n        style={{\n          position: \"absolute\",\n          width: props.h - 1 + \"px\",\n          height: props.v - 1 + \"px\",\n          top: props.y + \"px\",\n          left: props.x + 2 + \"px\",\n        }}\n      >\n        {props.number}\n      </div>\n    </>\n  );\n}\n\nexport function CurrentClue(props) {\n  let text = \"No clue selected.\";\n  if (props.clue !== null) {\n    const { num, direction, clue, letters, releaseDate } = props.clue;\n    const now = new Date();\n    const words =\n      now.getMonth() === 11 && now.getDate() > releaseDate\n        ? clue\n        : `Released on December ${releaseDate}.`;\n    text = `${num} ${direction}. ${words} (${letters})`;\n  }\n  return (\n    <div style={{ padding: \"15px\" }}>\n      <span\n        style={{\n          fontWeight: \"bold\",\n          padding: \"5px\",\n          margin: \"5px\",\n          backgroundColor: \"lightblue\",\n        }}\n      >\n        {text}\n      </span>\n    </div>\n  );\n}\n\nexport function Crossword(props) {\n  // a ClueDetails\n  const [selectedClue, setSelectedClue] = useState(null);\n  const [whiteCells, cells] = getWhiteCells(props.v, props.h, props.blackCells);\n  // different to props.clues\n  const clues = figureOutClues(props.h, props.v, whiteCells);\n  if (props.selectedClueSeq != null) {\n    for (const [num, clueSeq] of Object.entries(\n      clues[props.selectedClueSeq.direction]\n    )) {\n      const [clue, letters, date] = props.clues[clueSeq.direction][num];\n      const clueDets = new ClueDetails(\n        num,\n        clueSeq.direction,\n        clue,\n        letters,\n        date\n      );\n      if (\n        clueSeq.equals(props.selectedClueSeq) &&\n        !clueDets.equals(selectedClue)\n      ) {\n        setSelectedClue(clueDets);\n      }\n    }\n  }\n  function crosswordOnClick(num, dir) {\n    console.log(`crossword onClick() ${dir} ${num}`);\n    const clickedClue = clues[dir][num];\n    props.setSelectedClueSeq(clickedClue);\n    props.setSelectedCell(new Coord(clickedClue.x, clickedClue.y));\n  }\n  return (\n    <>\n      <h2>{props.title}</h2>\n      <p>{props.preamble}</p>\n      <CurrentClue clue={selectedClue}></CurrentClue>\n      <div style={{ margin: \"5px\" }} id=\"xwd-container\">\n        <Grid\n          blackCells={props.blackCells}\n          whiteCells={whiteCells}\n          cells={cells}\n          h={props.h}\n          v={props.h}\n          clues={clues}\n          selectedClue={props.selectedClueSeq}\n          setSelectedClue={props.setSelectedClueSeq}\n          selectedCell={props.selectedCell}\n          setSelectedCell={props.setSelectedCell}\n          filledCells={props.filledCells}\n          setFilledCells={props.setFilledCells}\n          selectNextCell={props.selectNextCell}\n        ></Grid>\n      </div>\n      <ClueBox\n        direction={AC}\n        clues={props.clues[AC]}\n        onClick={crosswordOnClick}\n        selectedClue={selectedClue}\n      />\n      <ClueBox\n        direction={DN}\n        clues={props.clues[DN]}\n        onClick={crosswordOnClick}\n        selectedClue={selectedClue}\n      />\n    </>\n  );\n}\n\nexport function Grid(props) {\n  const cellHeight = 28;\n  const cellWidth = 28;\n\n  function cellIsBlack(cell) {\n    for (let i = 0; i < props.blackCells.length; i++) {\n      const blackCell = props.blackCells[i];\n      if (cell.x === blackCell.x && cell.y === blackCell.y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function fillCell(i, j, contents) {\n    const newFilledCells = {\n      ...props.filledCells,\n    };\n    newFilledCells[`${i},${j}`] = contents;\n    props.setFilledCells(newFilledCells);\n  }\n\n  const clueCells = {};\n  for (let [key, value] of Object.entries(props.clues[AC])) {\n    clueCells[key] = new Coord(value.x, value.y);\n  }\n  for (let [key, value] of Object.entries(props.clues[DN])) {\n    clueCells[key] = new Coord(value.x, value.y);\n  }\n  function doHighlight(justClicked) {\n    if (\n      justClicked.x < 0 ||\n      justClicked.x >= props.h ||\n      justClicked.y < 0 ||\n      justClicked.y >= props.v\n    ) {\n      return;\n    }\n    if (cellIsBlack(justClicked)) {\n      return;\n    }\n    props.setSelectedCell(justClicked);\n    let matched = false;\n    for (const cell of props.whiteCells) {\n      if (justClicked.equals(cell)) {\n        matched = true;\n      }\n    }\n    if (!matched) {\n      return;\n    }\n    const highlighted = [];\n    let acHighlighted = null;\n    let dnHighlighted = null;\n    for (let value of Object.values(props.clues[AC])) {\n      if (cellInClue(value, justClicked)) {\n        acHighlighted = value;\n        // If this clue is the highlighted one already carry on.\n        if (props.selectedClue && !props.selectedClue.equals(acHighlighted)) {\n          console.log(\"setiting selected clue to\");\n          console.log(acHighlighted);\n          props.setSelectedClue(acHighlighted);\n          return;\n        } else {\n          break;\n        }\n      }\n    }\n    for (let value of Object.values(props.clues[DN])) {\n      if (cellInClue(value, justClicked)) {\n        dnHighlighted = value;\n        console.log(\"setiting selected clue to\");\n        console.log(dnHighlighted);\n        props.setSelectedClue(dnHighlighted);\n        return;\n      }\n    }\n  }\n\n  function moveCell(direction) {\n    if (direction === UP) {\n      doHighlight(props.selectedCell.nextCell(DN, false));\n    } else if (direction === DOWN) {\n      doHighlight(props.selectedCell.nextCell(DN, true));\n    } else if (direction === LEFT) {\n      doHighlight(props.selectedCell.nextCell(AC, false));\n    } else if (direction === RIGHT) {\n      doHighlight(props.selectedCell.nextCell(AC, true));\n    }\n  }\n\n  function selectNextClue() {\n    console.log(\"select next clue\");\n    console.log(props.selectedClue.direction);\n    const dirClues = Object.values(props.clues[props.selectedClue.direction]);\n    const otherDirection = props.selectedClue.direction === AC ? DN : AC;\n    const otherDirClues = Object.values(props.clues[otherDirection]);\n    console.log(otherDirection);\n\n    for (let i = 0; i < dirClues.length; i++) {\n      console.log(\"sel\");\n      console.log(props.selectedClue);\n      console.log(\"iter\");\n      console.log(dirClues[i]);\n      if (props.selectedClue.equals(dirClues[i])) {\n        let newClue;\n        if (i !== dirClues.length - 1) {\n          console.log(\"setting 1\");\n          newClue = dirClues[i + 1];\n        } else {\n          console.log(\"setting 2\");\n          newClue = otherDirClues[0];\n        }\n        props.setSelectedClue(newClue);\n        const coord = new Coord(newClue.x, newClue.y);\n        props.setSelectedCell(coord);\n        break;\n      }\n    }\n  }\n\n  let highlightedCells = [];\n  if (props.selectedClue != null) {\n    const { x, y, length, direction } = props.selectedClue;\n    console.log(x);\n    console.log(y);\n    console.log(length);\n    console.log(direction);\n    if (direction == AC) {\n      for (let i = x; i < x + length; i++) {\n        highlightedCells.push(new Coord(i, y));\n      }\n    } else {\n      for (let i = y; i < y + length; i++) {\n        highlightedCells.push(new Coord(x, i));\n      }\n    }\n  }\n\n  console.log(clueCells);\n  console.log(\"highlights\");\n  console.log(highlightedCells);\n  for (let k = 0; k < props.cells.length; k++) {\n    const [x, y] = props.cells[k];\n    let number = null;\n    for (let [key, value] of Object.entries(clueCells)) {\n      if (value.x === x && value.y === y) {\n        number = key;\n      }\n    }\n    props.cells[k].push(number);\n    let highlight = false;\n    for (let l = 0; l < highlightedCells.length; l++) {\n      if (x === highlightedCells[l].x && y === highlightedCells[l].y) {\n        highlight = true;\n      }\n    }\n    props.cells[k].push(highlight);\n  }\n  console.log(props.cells);\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: props.h * cellWidth + \"px\",\n        height: props.v * cellHeight + \"px\",\n      }}\n    >\n      {props.cells.map(([i, j, blackCell, number, highlight]) => {\n        if (blackCell) {\n          return (\n            <FilledCell\n              h={cellWidth}\n              v={cellHeight}\n              x={i * cellWidth}\n              y={j * cellHeight}\n              key={i + props.h * j}\n            />\n          );\n        } else {\n          return (\n            <EmptyCell\n              h={cellWidth}\n              v={cellHeight}\n              x={i * cellWidth}\n              y={j * cellHeight}\n              key={i + props.h * j}\n              number={number}\n              highlight={highlight}\n              selected={\n                props.selectedCell !== null &&\n                i === props.selectedCell.x &&\n                j === props.selectedCell.y\n              }\n              onClick={(e) => doHighlight(new Coord(i, j))}\n              selectNextCell={props.selectNextCell}\n              selectNextClue={selectNextClue}\n              moveCell={moveCell}\n              contents={props.filledCells[`${i},${j}`]}\n              setContents={(letter) => fillCell(i, j, letter)}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nexport function ClueBox(props) {\n  function clueBoxOnClick(number) {\n    props.onClick(number, props.direction);\n  }\n  let num = null;\n  let direction = null;\n  if (props.selectedClue !== null) {\n    num = props.selectedClue.num;\n    direction = props.selectedClue.direction;\n  }\n  return (\n    <div\n      style={{\n        fontWeight: \"bold\",\n        width: \"300px\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n        margin: \"5px\",\n      }}\n    >\n      <div style={{ border: \"1px solid black\", padding: \"5px\" }}>\n        {DIRNAME[props.direction]}\n      </div>\n      {Object.entries(props.clues).map((entry) => {\n        const [number, vals] = entry;\n        const selected = props.direction === direction && number === num;\n        const [clueText, len, releaseDate] = vals;\n\n        const now = new Date();\n        const text =\n          now.getMonth() === 10 && now.getDate() > releaseDate\n            ? clueText\n            : `Released on December ${releaseDate}.`;\n        function onClick() {\n          clueBoxOnClick(number);\n        }\n        return (\n          <Clue\n            number={number}\n            clue={text}\n            len={len}\n            onClick={onClick}\n            selected={selected}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport function Clue(props) {\n  let classNames = \"clue\";\n  if (props.selected) {\n    classNames = `${classNames} selected`;\n  }\n  return (\n    <div className={classNames} onClick={props.onClick}>\n      {props.number}. {props.clue} ({props.len})\n    </div>\n  );\n}\n","export const AC = \"ac\";\nexport const DN = \"dn\";\nexport const UP = \"up\";\nexport const DOWN = \"down\";\nexport const LEFT = \"left\";\nexport const RIGHT = \"right\";\nexport const DIRNAME = { ac: \"Across\", dn: \"Down\" };\n\nexport class Coord {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  equals(other) {\n    return other !== null && this.x === other.x && this.y === other.y;\n  }\n  nextCell(direction, forwards = true) {\n    const increment = forwards ? 1 : -1;\n    if (direction === AC) {\n      return new Coord(this.x + increment, this.y);\n    } else {\n      return new Coord(this.x, this.y + increment);\n    }\n  }\n  str() {\n    return `${this.x},${this.y}`;\n  }\n}\n\nexport class ClueSeq {\n  constructor(x, y, length, direction) {\n    this.x = x;\n    this.y = y;\n    this.length = length;\n    this.direction = direction;\n  }\n  equals(other) {\n    return (\n      other !== null &&\n      this.x === other.x &&\n      this.y === other.y &&\n      this.length === other.length &&\n      this.direction === other.direction\n    );\n  }\n}\n\nexport class ClueDetails {\n  constructor(num, direction, clue, letters, releaseDate) {\n    this.num = num;\n    this.direction = direction;\n    this.clue = clue;\n    this.letters = letters;\n    this.releaseDate = releaseDate;\n  }\n  equals(other) {\n    return (\n      other !== null &&\n      this.num === other.num &&\n      this.direction === other.direction\n    );\n  }\n}\n\nexport function cellInArray(array, cell) {\n  for (var k = 0; k < array.length; k++) {\n    const { x, y } = array[k];\n    if (x === cell.x && y === cell.y) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function cellInClue(clue, cell) {\n  if (clue.direction === AC) {\n    for (var i = clue.x; i < clue.x + clue.length; i++) {\n      if (cell.x === i && cell.y === clue.y) {\n        return true;\n      }\n    }\n  }\n  if (clue.direction === DN) {\n    for (var i = clue.y; i < clue.y + clue.length; i++) {\n      if (cell.x == clue.x && cell.y == i) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function getWhiteCells(h, v, blackCells) {\n  const cells = [];\n  const whiteCells = [];\n  /* Make array of white cells. */\n  for (let i = 0; i < h; i++) {\n    for (let j = 0; j < v; j++) {\n      let blackCell = false;\n      for (var k = 0; k < blackCells.length; k++) {\n        const bCell = blackCells[k];\n        if (bCell.x === i && bCell.y === j) {\n          blackCell = true;\n        }\n      }\n      if (!blackCell) {\n        whiteCells.push(new Coord(i, j));\n      }\n      cells.push([i, j, blackCell]);\n    }\n  }\n  return [whiteCells, cells];\n}\n\nexport function figureOutClues(acSquares, dnSquares, whiteSquares) {\n  /* Collect clues and write in numbers */\n  var acrossClues = [];\n  var downClues = [];\n  var clueNumber = 1;\n  /* loop from right to left then top to bottom */\n  for (var j = 0; j < dnSquares; j++) {\n    for (var i = 0; i < acSquares; i++) {\n      var cell = new Coord(i, j);\n      var acrossCount = 0;\n      var downCount = 0;\n      if (cellInArray(whiteSquares, cell)) {\n        /* Start of across clue */\n        if (i === 0 || !cellInArray(whiteSquares, new Coord(i - 1, j))) {\n          acrossCount = 1;\n          for (var k = i + 1; k < acSquares; k++) {\n            if (cellInArray(whiteSquares, new Coord(k, j))) {\n              acrossCount += 1;\n            } else {\n              break;\n            }\n          }\n          if (acrossCount > 1) {\n            acrossClues[clueNumber] = new ClueSeq(i, j, acrossCount, AC);\n          }\n        }\n        /* Start of down clue */\n        if (j === 0 || !cellInArray(whiteSquares, new Coord(i, j - 1))) {\n          downCount = 1;\n          for (var l = j + 1; l < dnSquares; l++) {\n            if (cellInArray(whiteSquares, new Coord(i, l))) {\n              downCount += 1;\n            } else {\n              break;\n            }\n          }\n          if (downCount > 1) {\n            downClues[clueNumber] = new ClueSeq(i, j, downCount, DN);\n          }\n        }\n        if (acrossCount > 1 || downCount > 1) {\n          clueNumber += 1;\n        }\n      }\n    }\n  }\n  return {\n    ac: acrossClues,\n    dn: downClues,\n  };\n}\n"],"names":["CrosswordPage","xwdData","useStaticQuery","allXwd2020Json","edges","node","title","preamble","acrossSize","across_size","downSize","down_size","blackSquares","black_squares","rawClues","clues","ac","dn","forEach","element","number","clue","length","date","blackCells","map","_ref","x","y","Coord","React","Layout","SEO","keywords","Crossword","h","v","FilledCell","props","style","position","width","height","top","left","className","EmptyCell","backgroundColor","selected","highlight","ref","input","focus","onClick","type","onKeyUp","event","console","log","key","match","setContents","selectNextCell","selectNextClue","moveCell","UP","DOWN","LEFT","RIGHT","value","contents","CurrentClue","text","num","direction","letters","releaseDate","now","Date","getMonth","getDate","padding","fontWeight","margin","selectedClue","setSelectedClue","useState","whiteCells","cells","getWhiteCells","figureOutClues","selectedClueSeq","clueSeq","Object","entries","clueDets","ClueDetails","equals","crosswordOnClick","dir","clickedClue","setSelectedClueSeq","setSelectedCell","id","Grid","selectedCell","filledCells","setFilledCells","ClueBox","AC","DN","clueCells","doHighlight","justClicked","cell","i","blackCell","cellIsBlack","matched","acHighlighted","dnHighlighted","values","cellInClue","nextCell","dirClues","otherDirection","otherDirClues","newClue","coord","highlightedCells","push","k","l","j","e","letter","newFilledCells","fillCell","display","verticalAlign","border","DIRNAME","entry","vals","clueText","len","Clue","clueBoxOnClick","classNames","this","_proto","prototype","other","forwards","increment","str","ClueSeq","cellInArray","array","bCell","acSquares","dnSquares","whiteSquares","acrossClues","downClues","clueNumber","acrossCount","downCount"],"sourceRoot":""}