{"version":3,"file":"component---src-pages-xwd-tsx-7fae3c6fbd1360ac62ca.js","mappings":"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","sources":["webpack://xwds/./src/components/xwd_utils.js","webpack://xwds/./src/components/xwd.js","webpack://xwds/./src/pages/xwd.tsx"],"sourcesContent":["export const AC = \"ac\";\nexport const DN = \"dn\";\nexport const UP = \"up\";\nexport const DOWN = \"down\";\nexport const LEFT = \"left\";\nexport const RIGHT = \"right\";\nexport const DIRNAME = { ac: \"Across\", dn: \"Down\" };\n\nexport class Coord {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  equals(other) {\n    return other !== null && this.x === other.x && this.y === other.y;\n  }\n  nextCell(direction, forwards = true) {\n    const increment = forwards ? 1 : -1;\n    if (direction === AC) {\n      return new Coord(this.x + increment, this.y);\n    } else {\n      return new Coord(this.x, this.y + increment);\n    }\n  }\n}\n\nexport class ClueSeq {\n  constructor(x, y, length, direction) {\n    this.x = x;\n    this.y = y;\n    this.length = length;\n    this.direction = direction;\n  }\n  equals(other) {\n    return (\n      other !== null &&\n      this.x === other.x &&\n      this.y === other.y &&\n      this.length === other.length &&\n      this.direction === other.direction\n    );\n  }\n}\n\nexport class ClueDetails {\n  constructor(num, direction, clue, letters, releaseDate) {\n    this.num = num;\n    this.direction = direction;\n    this.clue = clue;\n    this.letters = letters;\n    this.releaseDate = releaseDate;\n  }\n  equals(other) {\n    return (\n      other !== null &&\n      this.num === other.num &&\n      this.direction === other.direction\n    );\n  }\n}\n\nexport function cellInArray(array, cell) {\n  for (var k = 0; k < array.length; k++) {\n    const { x, y } = array[k];\n    if (x === cell.x && y === cell.y) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function cellInClue(clue, cell) {\n  if (clue.direction === AC) {\n    for (var i = clue.x; i < clue.x + clue.length; i++) {\n      if (cell.x === i && cell.y === clue.y) {\n        return true;\n      }\n    }\n  }\n  if (clue.direction === DN) {\n    for (var i = clue.y; i < clue.y + clue.length; i++) {\n      if (cell.x == clue.x && cell.y == i) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function getWhiteCells(h, v, blackCells) {\n  const cells = [];\n  const whiteCells = [];\n  /* Make array of white cells. */\n  for (let i = 0; i < h; i++) {\n    for (let j = 0; j < v; j++) {\n      let blackCell = false;\n      for (var k = 0; k < blackCells.length; k++) {\n        const bCell = blackCells[k];\n        if (bCell.x === i && bCell.y === j) {\n          blackCell = true;\n        }\n      }\n      if (!blackCell) {\n        whiteCells.push(new Coord(i, j));\n      }\n      cells.push([i, j, blackCell]);\n    }\n  }\n  return [whiteCells, cells];\n}\n\nexport function figureOutClues(acSquares, dnSquares, whiteSquares) {\n  /* Collect clues and write in numbers */\n  var acrossClues = [];\n  var downClues = [];\n  var clueNumber = 1;\n  /* loop from right to left then top to bottom */\n  for (var j = 0; j < dnSquares; j++) {\n    for (var i = 0; i < acSquares; i++) {\n      var cell = new Coord(i, j);\n      var acrossCount = 0;\n      var downCount = 0;\n      if (cellInArray(whiteSquares, cell)) {\n        /* Start of across clue */\n        if (i === 0 || !cellInArray(whiteSquares, new Coord(i - 1, j))) {\n          acrossCount = 1;\n          for (var k = i + 1; k < acSquares; k++) {\n            if (cellInArray(whiteSquares, new Coord(k, j))) {\n              acrossCount += 1;\n            } else {\n              break;\n            }\n          }\n          if (acrossCount > 1) {\n            acrossClues[clueNumber] = new ClueSeq(i, j, acrossCount, AC);\n          }\n        }\n        /* Start of down clue */\n        if (j === 0 || !cellInArray(whiteSquares, new Coord(i, j - 1))) {\n          downCount = 1;\n          for (var l = j + 1; l < dnSquares; l++) {\n            if (cellInArray(whiteSquares, new Coord(i, l))) {\n              downCount += 1;\n            } else {\n              break;\n            }\n          }\n          if (downCount > 1) {\n            downClues[clueNumber] = new ClueSeq(i, j, downCount, DN);\n          }\n        }\n        if (acrossCount > 1 || downCount > 1) {\n          clueNumber += 1;\n        }\n      }\n    }\n  }\n  return {\n    ac: acrossClues,\n    dn: downClues\n  };\n}\n","import React, { useState } from \"react\";\nimport {\n  AC,\n  DN,\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n  DIRNAME,\n  Coord,\n  cellInClue,\n  figureOutClues,\n  getWhiteCells,\n  ClueDetails,\n} from \"./xwd_utils\";\n\nexport function FilledCell(props) {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        width: props.h + 1 + \"px\",\n        height: props.v + 1 + \"px\",\n        top: props.y + \"px\",\n        left: props.x + \"px\",\n      }}\n      className=\"black-cell\"\n    ></div>\n  );\n}\nexport function EmptyCell(props) {\n  const [contents, setContents] = useState(\"\");\n  const handleKeyUp = (event) => {\n    console.log(\"pressed \" + event.key);\n    if (event.key.match(/^[a-z]$/i)) {\n      setContents(event.key);\n      props.selectNextCell();\n    } else if (event.key === \"Backspace\") {\n      setContents(\"\");\n      props.selectNextCell(false);\n    } else if (event.key === \"Delete\") {\n      setContents(\"\");\n    } else if (event.key === \"Tab\") {\n      props.selectNextClue();\n    } else if (event.key === \"ArrowUp\") {\n      props.moveCell(UP);\n    } else if (event.key === \"ArrowDown\") {\n      props.moveCell(DOWN);\n    } else if (event.key === \"ArrowLeft\") {\n      props.moveCell(LEFT);\n    } else if (event.key === \"ArrowRight\") {\n      props.moveCell(RIGHT);\n    }\n  };\n  let backgroundColor = props.selected\n    ? \"cyan\"\n    : props.highlight\n    ? \"lightblue\"\n    : \"lightgray\";\n\n  return (\n    <>\n      <input\n        style={{\n          position: \"absolute\",\n          width: props.h - 1 + \"px\",\n          height: props.v - 1 + \"px\",\n          top: props.y + \"px\",\n          left: props.x + \"px\",\n          backgroundColor: backgroundColor,\n        }}\n        ref={(input) => input && props.selected && input.focus()}\n        onClick={props.onClick}\n        className=\"white-cell\"\n        type=\"text\"\n        onKeyUp={handleKeyUp}\n        value={contents}\n      ></input>\n      <div\n        className=\"clue-number\"\n        style={{\n          position: \"absolute\",\n          width: props.h - 1 + \"px\",\n          height: props.v - 1 + \"px\",\n          top: props.y + \"px\",\n          left: props.x + 2 + \"px\",\n        }}\n      >\n        {props.number}\n      </div>\n    </>\n  );\n}\n\nexport function CurrentClue(props) {\n  let text = \"No clue selected.\";\n  if (props.clue !== null) {\n    const { num, direction, clue, letters, releaseDate } = props.clue;\n    const now = new Date();\n    const words =\n      now.getMonth() === 11 && now.getDate() > releaseDate\n        ? clue\n        : `Released on December ${releaseDate}.`;\n    text = `${num} ${direction}. ${words} (${letters})`;\n  }\n  return (\n    <div style={{ padding: \"15px\" }}>\n      <span\n        style={{\n          fontWeight: \"bold\",\n          padding: \"5px\",\n          margin: \"5px\",\n          backgroundColor: \"lightblue\",\n        }}\n      >\n        {text}\n      </span>\n    </div>\n  );\n}\n\nexport function Crossword(props) {\n  // a ClueSeq\n  const [selectedClueSeq, setSelectedClueSeq] = useState(null);\n  // a ClueDetails\n  const [selectedClue, setSelectedClue] = useState(null);\n  // a Coord\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [whiteCells, cells] = getWhiteCells(props.v, props.h, props.blackCells);\n  // different to props.clues\n  const clues = figureOutClues(props.h, props.v, whiteCells);\n  if (selectedClueSeq != null) {\n    for (const [num, clueSeq] of Object.entries(\n      clues[selectedClueSeq.direction]\n    )) {\n      const [clue, letters, date] = props.clues[clueSeq.direction][num];\n      const clueDets = new ClueDetails(\n        num,\n        clueSeq.direction,\n        clue,\n        letters,\n        date\n      );\n      if (clueSeq.equals(selectedClueSeq) && !clueDets.equals(selectedClue)) {\n        setSelectedClue(clueDets);\n      }\n    }\n  }\n  function crosswordOnClick(num, dir) {\n    console.log(`crossword onClick() ${dir} ${num}`);\n    const clickedClue = clues[dir][num];\n    setSelectedClueSeq(clickedClue);\n    setSelectedCell(new Coord(clickedClue.x, clickedClue.y));\n  }\n  return (\n    <>\n      <h1>{props.title}</h1>\n      <p>{props.preamble}</p>\n      <CurrentClue clue={selectedClue}></CurrentClue>\n      <div style={{ margin: \"5px\" }} id=\"xwd-container\">\n        <Grid\n          blackCells={props.blackCells}\n          whiteCells={whiteCells}\n          cells={cells}\n          h={props.h}\n          v={props.h}\n          clues={clues}\n          selectedClue={selectedClueSeq}\n          setSelectedClue={setSelectedClueSeq}\n          selectedCell={selectedCell}\n          setSelectedCell={setSelectedCell}\n        ></Grid>\n      </div>\n      <ClueBox\n        direction={AC}\n        clues={props.clues[AC]}\n        onClick={crosswordOnClick}\n        selectedClue={selectedClue}\n      />\n      <ClueBox\n        direction={DN}\n        clues={props.clues[DN]}\n        onClick={crosswordOnClick}\n        selectedClue={selectedClue}\n      />\n    </>\n  );\n}\n\nexport function Grid(props) {\n  const cellHeight = 30;\n  const cellWidth = 30;\n\n  function cellIsBlack(cell) {\n    for (let i = 0; i < props.blackCells.length; i++) {\n      const blackCell = props.blackCells[i];\n      if (cell.x === blackCell.x && cell.y === blackCell.y) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const clueCells = {};\n  for (let [key, value] of Object.entries(props.clues[AC])) {\n    clueCells[key] = new Coord(value.x, value.y);\n  }\n  for (let [key, value] of Object.entries(props.clues[DN])) {\n    clueCells[key] = new Coord(value.x, value.y);\n  }\n  function doHighlight(justClicked) {\n    console.log(\"just clicked\");\n    console.log(justClicked);\n    if (\n      justClicked.x < 0 ||\n      justClicked.x >= props.h ||\n      justClicked.y < 0 ||\n      justClicked.y >= props.v\n    ) {\n      return;\n    }\n    if (cellIsBlack(justClicked)) {\n      return;\n    }\n    props.setSelectedCell(justClicked);\n    let matched = false;\n    for (const cell of props.whiteCells) {\n      if (justClicked.equals(cell)) {\n        matched = true;\n      }\n    }\n    if (!matched) {\n      return;\n    }\n    const highlighted = [];\n    let acHighlighted = null;\n    let dnHighlighted = null;\n    for (let value of Object.values(props.clues[AC])) {\n      if (cellInClue(value, justClicked)) {\n        acHighlighted = value;\n        // If this clue is the highlighted one already carry on.\n        if (props.selectedClue && !props.selectedClue.equals(acHighlighted)) {\n          console.log(\"setiting selected clue to\");\n          console.log(acHighlighted);\n          props.setSelectedClue(acHighlighted);\n          return;\n        } else {\n          break;\n        }\n      }\n    }\n    for (let value of Object.values(props.clues[DN])) {\n      if (cellInClue(value, justClicked)) {\n        dnHighlighted = value;\n        console.log(\"setiting selected clue to\");\n        console.log(dnHighlighted);\n        props.setSelectedClue(dnHighlighted);\n        return;\n      }\n    }\n  }\n\n  function selectNextCell(forwards = true) {\n    const { x, y } = props.selectedCell;\n    if (props.selectedClue.direction === AC) {\n      if (\n        forwards &&\n        x !== props.selectedClue.x + props.selectedClue.length - 1\n      ) {\n        props.setSelectedCell(new Coord(x + 1, y));\n      } else if (!forwards && x !== props.selectedClue.x) {\n        props.setSelectedCell(new Coord(x - 1, y));\n      }\n    }\n    if (props.selectedClue.direction === DN) {\n      if (\n        forwards &&\n        y !== props.selectedClue.y + props.selectedClue.length - 1\n      ) {\n        props.setSelectedCell(new Coord(x, y + 1));\n      } else if (!forwards && y !== props.selectedClue.y) {\n        props.setSelectedCell(new Coord(x, y - 1));\n      }\n    }\n  }\n\n  function moveCell(direction) {\n    if (direction === UP) {\n      doHighlight(props.selectedCell.nextCell(DN, false));\n    } else if (direction === DOWN) {\n      doHighlight(props.selectedCell.nextCell(DN, true));\n    } else if (direction === LEFT) {\n      doHighlight(props.selectedCell.nextCell(AC, false));\n    } else if (direction === RIGHT) {\n      doHighlight(props.selectedCell.nextCell(AC, true));\n    }\n  }\n\n  function selectNextClue() {\n    console.log(\"select next clue\");\n    console.log(props.selectedClue.direction);\n    const dirClues = Object.values(props.clues[props.selectedClue.direction]);\n    const otherDirection = props.selectedClue.direction === AC ? DN : AC;\n    const otherDirClues = Object.values(props.clues[otherDirection]);\n    console.log(otherDirection);\n\n    for (let i = 0; i < dirClues.length; i++) {\n      console.log(\"sel\");\n      console.log(props.selectedClue);\n      console.log(\"iter\");\n      console.log(dirClues[i]);\n      if (props.selectedClue.equals(dirClues[i])) {\n        let newClue;\n        if (i !== dirClues.length - 1) {\n          console.log(\"setting 1\");\n          newClue = dirClues[i + 1];\n        } else {\n          console.log(\"setting 2\");\n          newClue = otherDirClues[0];\n        }\n        props.setSelectedClue(newClue);\n        const coord = new Coord(newClue.x, newClue.y);\n        props.setSelectedCell(coord);\n        break;\n      }\n    }\n  }\n\n  let highlightedCells = [];\n  if (props.selectedClue != null) {\n    const { x, y, length, direction } = props.selectedClue;\n    console.log(x);\n    console.log(y);\n    console.log(length);\n    console.log(direction);\n    if (direction == AC) {\n      for (let i = x; i < x + length; i++) {\n        highlightedCells.push(new Coord(i, y));\n      }\n    } else {\n      for (let i = y; i < y + length; i++) {\n        highlightedCells.push(new Coord(x, i));\n      }\n    }\n  }\n\n  console.log(clueCells);\n  console.log(\"highlights\");\n  console.log(highlightedCells);\n  for (let k = 0; k < props.cells.length; k++) {\n    const [x, y] = props.cells[k];\n    let number = null;\n    for (let [key, value] of Object.entries(clueCells)) {\n      if (value.x === x && value.y === y) {\n        number = key;\n      }\n    }\n    props.cells[k].push(number);\n    let highlight = false;\n    for (let l = 0; l < highlightedCells.length; l++) {\n      if (x === highlightedCells[l].x && y === highlightedCells[l].y) {\n        highlight = true;\n      }\n    }\n    props.cells[k].push(highlight);\n  }\n  console.log(props.cells);\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: props.h * cellWidth + \"px\",\n        height: props.v * cellHeight + \"px\",\n      }}\n    >\n      {props.cells.map(([i, j, blackCell, number, highlight]) => {\n        if (blackCell) {\n          return (\n            <FilledCell\n              h={cellWidth}\n              v={cellHeight}\n              x={i * cellWidth}\n              y={j * cellHeight}\n              key={i + props.h * j}\n            />\n          );\n        } else {\n          return (\n            <EmptyCell\n              h={cellWidth}\n              v={cellHeight}\n              x={i * cellWidth}\n              y={j * cellHeight}\n              key={i + props.h * j}\n              number={number}\n              highlight={highlight}\n              selected={\n                props.selectedCell !== null &&\n                i === props.selectedCell.x &&\n                j === props.selectedCell.y\n              }\n              onClick={(e) => doHighlight(new Coord(i, j))}\n              selectNextCell={selectNextCell}\n              selectNextClue={selectNextClue}\n              moveCell={moveCell}\n            />\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nexport function ClueBox(props) {\n  function clueBoxOnClick(number) {\n    props.onClick(number, props.direction);\n  }\n  let num = null;\n  let direction = null;\n  if (props.selectedClue !== null) {\n    num = props.selectedClue.num;\n    direction = props.selectedClue.direction;\n  }\n  return (\n    <div\n      style={{\n        fontWeight: \"bold\",\n        width: \"300px\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n        margin: \"5px\",\n      }}\n    >\n      <div style={{ border: \"1px solid black\", padding: \"5px\" }}>\n        {DIRNAME[props.direction]}\n      </div>\n      {Object.entries(props.clues).map((entry) => {\n        const [number, vals] = entry;\n        const selected = props.direction === direction && number === num;\n        const [clueText, len, releaseDate] = vals;\n\n        const now = new Date();\n        const text =\n          now.getMonth() === 11 && now.getDate() > releaseDate\n            ? clueText\n            : `Released on December ${releaseDate}.`;\n        function onClick() {\n          clueBoxOnClick(number);\n        }\n        return (\n          <Clue\n            number={number}\n            clue={text}\n            len={len}\n            onClick={onClick}\n            selected={selected}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport function Clue(props) {\n  let classNames = \"clue\";\n  if (props.selected) {\n    classNames = `${classNames} selected`;\n  }\n  return (\n    <div className={classNames} onClick={props.onClick}>\n      {props.number}. {props.clue} ({props.len})\n    </div>\n  );\n}\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { Crossword } from \"../components/xwd\";\nimport { Coord } from \"../components/xwd_utils\";\n\nconst CrosswordPage = (): JSX.Element => {\n  const data = useStaticQuery(graphql`\n    query XwdQuery {\n      allXwd2020Json {\n        edges {\n          node {\n            title\n            preamble\n            across_size\n            down_size\n            black_squares\n            clues {\n              ac {\n                number\n                clue\n                length\n                date\n              }\n              dn {\n                number\n                clue\n                length\n                date\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  const xwdData = data.allXwd2020Json.edges[0].node;\n  const title = xwdData.title;\n  const preamble = xwdData.preamble;\n  const acrossSize = xwdData.across_size;\n  const downSize = xwdData.down_size;\n  const blackSquares = xwdData.black_squares;\n  const rawClues = xwdData.clues;\n  const clues = { ac: {}, dn: {} };\n  rawClues.ac.forEach((element) => {\n    clues.ac[element.number] = [element.clue, element.length, element.date];\n  });\n  rawClues.dn.forEach((element) => {\n    clues.dn[element.number] = [element.clue, element.length, element.date];\n  });\n\n  const blackCells = blackSquares.map(([x, y]) => new Coord(x, y));\n  return (\n    <Layout>\n      <SEO title=\"Crosswords\" keywords={[`gatsby`, `application`, `react`]} />\n      <Crossword\n        title={title}\n        preamble={preamble}\n        blackCells={blackCells}\n        h={acrossSize}\n        v={downSize}\n        clues={clues}\n      />\n    </Layout>\n  );\n};\n\nexport default CrosswordPage;\n"],"names":["AC","DN","DOWN","LEFT","RIGHT","DIRNAME","ac","dn","Coord","x","y","this","_proto","prototype","equals","other","nextCell","direction","forwards","increment","ClueSeq","length","ClueDetails","num","clue","letters","releaseDate","cellInArray","array","cell","k","cellInClue","i","FilledCell","props","React","style","position","width","h","height","v","top","left","className","EmptyCell","contents","setContents","useState","backgroundColor","selected","highlight","ref","input","focus","onClick","type","onKeyUp","event","console","log","key","match","selectNextCell","selectNextClue","moveCell","value","number","CurrentClue","text","now","Date","getMonth","getDate","padding","fontWeight","margin","Crossword","selectedClueSeq","setSelectedClueSeq","selectedClue","setSelectedClue","selectedCell","setSelectedCell","whiteCells","cells","blackCells","j","blackCell","bCell","push","getWhiteCells","clues","acSquares","dnSquares","whiteSquares","acrossClues","downClues","clueNumber","acrossCount","downCount","l","figureOutClues","clueSeq","Object","entries","date","clueDets","crosswordOnClick","dir","clickedClue","title","preamble","id","Grid","ClueBox","clueCells","doHighlight","justClicked","cellIsBlack","matched","acHighlighted","dnHighlighted","values","dirClues","otherDirection","otherDirClues","newClue","coord","highlightedCells","map","_ref","e","display","verticalAlign","border","entry","vals","clueText","len","Clue","clueBoxOnClick","classNames","CrosswordPage","xwdData","useStaticQuery","allXwd2020Json","edges","node","acrossSize","across_size","downSize","down_size","blackSquares","black_squares","rawClues","forEach","element","Layout","SEO","keywords"],"sourceRoot":""}